/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista;

import Controlador.Controlador;
import DTO.CursoDTO;
import DTO.FichaPagoDTO;
import DTO.HorarioDTO;
import Modelo.IModelo;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * La vista principal de el sistema de inscripciones.
 * @author benja
 */
public class VistaInscripciones extends javax.swing.JFrame implements Observador {

    private Controlador control;
    private IModelo modelo;
    private final PanelFichaPago panelFicha;

    /**
     * Creates new form VistaInscripciones
     */
    public VistaInscripciones(Controlador control) {
        initComponents();
        this.control = control;
        this.setTitle("Inscripci√≥n de cursos");
        this.setDefaultCloseOperation(EXIT_ON_CLOSE);
        this.setLocationRelativeTo(null);
        this.panelFicha = new PanelFichaPago();
        pnlFichaPago.setLayout(new java.awt.BorderLayout());
        pnlFichaPago.add(panelFicha, java.awt.BorderLayout.CENTER);
        pnlFichaPago.setVisible(false); 
        configurarListeners();
        panelFicha.limpiar();
        lblCostoTotal.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaCursosNoInscritos = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaCursosInscritos = new javax.swing.JTable();
        Titulo = new javax.swing.JLabel();
        btnGenerarFichaPago = new javax.swing.JButton();
        pnlFichaPago = new javax.swing.JPanel();
        btnReset = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblCostoTotal = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setForeground(new java.awt.Color(204, 255, 255));

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));

        tablaCursosNoInscritos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Curso", "Costo", "Horario"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaCursosNoInscritos);

        tablaCursosInscritos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Curso", "Costo", "Horario"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tablaCursosInscritos);

        Titulo.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        Titulo.setForeground(new java.awt.Color(0, 0, 0));
        Titulo.setText("Sistema De inscripciones");

        btnGenerarFichaPago.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnGenerarFichaPago.setText("Generar Ficha de pago");
        btnGenerarFichaPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarFichaPagoActionPerformed(evt);
            }
        });

        pnlFichaPago.setBackground(new java.awt.Color(204, 255, 255));

        javax.swing.GroupLayout pnlFichaPagoLayout = new javax.swing.GroupLayout(pnlFichaPago);
        pnlFichaPago.setLayout(pnlFichaPagoLayout);
        pnlFichaPagoLayout.setHorizontalGroup(
            pnlFichaPagoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 677, Short.MAX_VALUE)
        );
        pnlFichaPagoLayout.setVerticalGroup(
            pnlFichaPagoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 351, Short.MAX_VALUE)
        );

        btnReset.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnReset.setText("Restear");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Cursos disponibles");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Cursos Inscritos");

        lblCostoTotal.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblCostoTotal.setForeground(new java.awt.Color(0, 0, 0));
        lblCostoTotal.setText("jLabel3");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(384, 384, 384)
                        .addComponent(Titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(58, 58, 58)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnGenerarFichaPago, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblCostoTotal))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(211, 211, 211)
                        .addComponent(pnlFichaPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(78, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(Titulo)
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnGenerarFichaPago, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCostoTotal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlFichaPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        control.reiniciar();
        panelFicha.limpiar();
        pnlFichaPago.setVisible(false); 
        lblCostoTotal.setVisible(false);
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnGenerarFichaPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarFichaPagoActionPerformed
        control.generarFicha();
    }//GEN-LAST:event_btnGenerarFichaPagoActionPerformed
   /**
     * Configura los listeners (oyentes de eventos) para los componentes interactivos
     * de la vista, como las tablas.
     */
    private void configurarListeners() {
        tablaCursosNoInscritos.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                inscribirCursoSeleccionado();
            }
        });

        tablaCursosInscritos.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                desinscribirCursoSeleccionado();
            }
        });
    }

    /**
     * Obtiene el curso seleccionado de la tabla de cursos disponibles y
     * solicita al controlador que lo inscriba.
     */
    private void inscribirCursoSeleccionado() {
        int filaSeleccionada = tablaCursosNoInscritos.getSelectedRow();
        if (filaSeleccionada != -1 && modelo != null) {
            CursoDTO cursoSeleccionado = modelo.getCursosNoInscritos().get(filaSeleccionada);
            control.inscribirCurso(cursoSeleccionado);
        }
    }

    /**
     * Obtiene el curso seleccionado de la tabla de cursos inscritos y
     * solicita al controlador que lo desinscriba.
     */
    private void desinscribirCursoSeleccionado() {
        int filaSeleccionada = tablaCursosInscritos.getSelectedRow();
        if (filaSeleccionada != -1 && modelo != null) {
            CursoDTO cursoSeleccionado = modelo.getCursosInscritos().get(filaSeleccionada);
            control.desinscribirCurso(cursoSeleccionado);
        }
    }

    /**
     * M√©todo principal del patr√≥n Observer. Es llamado por el Modelo cuando
     * hay un cambio en los datos. Se encarga de refrescar toda la interfaz.
     * @param iModelo El modelo con el estado actualizado.
     */
    @Override
    public void actualiza(IModelo iModelo) {
        this.modelo = iModelo;

        llenarTabla(tablaCursosNoInscritos, modelo.getCursosNoInscritos());
        llenarTabla(tablaCursosInscritos, modelo.getCursosInscritos());

        double total = modelo.getCostoTotalInscritos();
        if (total > 0) {
            lblCostoTotal.setText(String.format("Costo Total: $%.2f", total));
            lblCostoTotal.setVisible(true);
        } else {
            lblCostoTotal.setVisible(false);
        }

        FichaPagoDTO ficha = modelo.getUltimaFichaYLimpiar();
        if (ficha != null && !ficha.getCursosInscritos().isEmpty()) {
            pnlFichaPago.setVisible(true);
            panelFicha.mostrarFicha(ficha);
        } else if (ficha != null) {
            pnlFichaPago.setVisible(false);
        }
    }

    /**
     * M√©todo de utilidad para llenar una JTable con una lista de cursos.
     * Limpia la tabla antes de a√±adir las nuevas filas.
     * @param tabla La JTable que se va a llenar.
     * @param cursos La lista de CursoDTO con los datos.
     */
    private void llenarTabla(javax.swing.JTable tabla, List<CursoDTO> cursos) {
        DefaultTableModel tableModel = (DefaultTableModel) tabla.getModel();
        tableModel.setRowCount(0);

        for (CursoDTO curso : cursos) {
            String horariosStr = curso.getHorarios().stream()
                    .map(HorarioDTO::toString)
                    .collect(Collectors.joining(" | "));

            Object[] fila = {
                curso.getNombre(),
                String.format("$%.2f", curso.getCosto()),
                horariosStr
            };
            tableModel.addRow(fila);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Titulo;
    private javax.swing.JButton btnGenerarFichaPago;
    private javax.swing.JButton btnReset;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblCostoTotal;
    private javax.swing.JPanel pnlFichaPago;
    private javax.swing.JTable tablaCursosInscritos;
    private javax.swing.JTable tablaCursosNoInscritos;
    // End of variables declaration//GEN-END:variables
}
